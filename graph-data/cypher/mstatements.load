LOAD CSV WITH HEADERS FROM '%dataImportLink%/csv/mstatements.csv' AS line

xMATCH (e:LegalEntity)-[:CLIENT_SIGNS]->(a:Agreement {id:line.AgreementId})<-[:COUNTERPARTY_SIGNS]-(ce:LegalEntity)

MERGE (ms:MarginStatement {id:line.StatementId, date:line.StatementDate, interestPayment:toFloat(line.InterestPayment), productCashFlows:toFloat(line.ProductsCashFlows), PAI:toFloat(line.PAI), feesCommissions:toFloat(line.FeesCommissions), pendingCash:toFloat(line.PendingCash), pendingNonCash:toFloat(line.PendingNonCash), direction:line.Direction, currency:line.Currency, legalEntityId:'1'})
ON CREATE SET ms.totalAmount=toFloat(line.TotalAmount)
ON MATCH SET ms.totalAmount=ms.totalAmount + toFloat(line.TotalAmount)

MERGE (ms)-[:STEMS_FROM]->(a)

WITH *, CASE WHEN line.Direction = 'IN' THEN [1] ELSE [] END as moneyIn
FOREACH (i in moneyIn | MERGE (ms)-[:DIRECTED_TO]->(ce) MERGE (ms)-[:SENT_FROM]->(e))

WITH *, CASE WHEN line.Direction = 'OUT' THEN [1] ELSE [] END as moneyOut
FOREACH (i in moneyOut | MERGE (ms)-[:DIRECTED_TO]->(e) MERGE (ms)-[:SENT_FROM]->(ce))
