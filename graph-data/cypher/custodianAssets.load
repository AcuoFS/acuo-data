LOAD CSV WITH HEADERS FROM '%dataImportLink%/csv/custodianAssets.csv' 
AS line 

MATCH (custac:CustodianAccount {id:line.accountId})

MERGE (a:Asset {id: line.assetId})
ON CREATE SET 	a.idType = line.idType,
				a.name = line.name,		
				a.currency = line.currency,
				a.yield = TOFLOAT(line.yield),
				a.type = line.type,
				a.ICADCode = line.ICADCode,
				a.ACUOCategory = line.ACUOCategory,
				a.parValue = TOFLOAT(line.parValue),
				a.minUnit = TOFLOAT(line.minUnit)

FOREACH(x IN (CASE WHEN TOUPPER(line.type) = 'BOND' THEN [1] else [] END) | SET a :Bond)
FOREACH(x IN (CASE WHEN TOUPPER(line.type) = 'CASH' THEN [1] else [] END) | SET a :Cash)

MERGE (custac)-[h:HOLDS {businessTimeFrom:line.businessTimeFrom, businessTimeTo:line.businessTimeTo}]->(a)
ON CREATE SET 	h.availableQuantity = TOFLOAT(line.availableQuantity),
				h.reservedQuantity = TOFLOAT(line.reservedQuantity),
				h.internalCost = TOFLOAT(line.internalCost),
				h.opptCost = TOFLOAT(line.opptCost)
ON MATCH SET 	h.availableQuantity = TOFLOAT(line.availableQuantity),
				h.reservedQuantity = TOFLOAT(line.reservedQuantity),
				h.internalCost = TOFLOAT(line.internalCost),
				h.opptCost = TOFLOAT(line.opptCost)

WITH *

MERGE (source:PricingSource {name:line.PricingSource})

MERGE (a)-[:PRICING_SOURCE]->(source)

WITH line,a,custac, timestamp()/1000/60/60/24 AS todayDays, TOINT(line.futureDays) AS futureDays

FOREACH (i IN CASE 	WHEN trim(line.ticker)<>"" THEN [1] 
	ELSE [] END | SET a.ticker=line.ticker)
FOREACH (i IN CASE 	WHEN trim(line.issueDate)<>"" AND trim(line.maturityDate)<>"" THEN [1] 
	ELSE [] END | SET a.issueDate=line.issueDate, a.maturityDate=line.maturityDate)
FOREACH (i IN CASE 	WHEN trim(line.issueDate)<>"" AND trim(line.maturityDate)<>"" AND futureDays>todayDays THEN [1] 
	ELSE [] END | SET a.timeToMaturityDays=TOFLOAT(futureDays-todayDays), a.timeToMaturityYears = TOFLOAT(a.timeToMaturityDays/365))
FOREACH (i IN CASE 	WHEN trim(line.issuerSector)<>"" THEN [1] 
	ELSE [] END | SET a.issuerSector=line.issuerSector)
FOREACH (i IN CASE 	WHEN trim(line.issuerCountryCode)<>"" THEN [1] 
	ELSE [] END | SET a.issuerCountryCode=line.issuerCountryCode)
FOREACH (i IN CASE 	WHEN trim(line.fitchRating)<>"" THEN [1] 
	ELSE [] END | SET a.fitchRating=line.fitchRating)
FOREACH (i IN CASE 	WHEN trim(line.rateType)<>"" THEN [1] 
	ELSE [] END | SET a.rateType=line.rateType)
