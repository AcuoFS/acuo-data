LOAD CSV WITH HEADERS FROM '%dataImportLink%/csv/custodianAssets.csv' 
AS line 

MATCH (custac:CustodianAccount {id:line.accountId})

MERGE (custac)-[h:HOLDS {businessTimeFrom:line.businessTimeFrom, businessTimeTo:line.businessTimeTo}]->(a:Asset {id: line.assetId,idType: line.idType, name:line.name,
	currency:line.currency,	yield: TOFLOAT(line.yield),type:line.type,ICADCode:line.ICADCode,ACUOCategory:line.ACUOCategory,
	price:TOFLOAT(line.price),parValue:TOFLOAT(line.parValue),minUnit:TOFLOAT(line.minUnit),minUnitValue:TOFLOAT(line.minUnitValue)})

ON CREATE SET
h.availableQuantity=TOFLOAT(line.availableQuantity),
//	h.deployedQuantity=TOFLOAT(line.deployedQuantity),
//	h.departingQuantity=TOFLOAT(line.departingQuantity),
//	h.arrivingQuantity =TOFLOAT(line.arrivingQuantity),
h.reservedQuantity=TOFLOAT(line.reservedQuantity),
h.internalCost=TOFLOAT(line.internalCost),
h.opptCost=TOFLOAT(line.opptCost)

ON MATCH SET
h.availableQuantity=TOFLOAT(line.availableQuantity),
//	h.deployedQuantity=TOFLOAT(line.deployedQuantity),
//	h.departedQuantity=TOFLOAT(line.departedQuantity),
//	h.arrivingQuantity =TOFLOAT(line.arrivingQuantity),
h.reservedQuantity=TOFLOAT(line.reservedQuantity),
h.internalCost=TOFLOAT(line.internalCost),
h.opptCost=TOFLOAT(line.opptCost)

WITH *

MERGE (a)-[:PREFERRED_SOURCE]->(:Source {name:line.PreferredSource})

WITH line,a,custac, timestamp()/1000/60/60/24 AS todayDays, TOINT(line.futureDays) AS futureDays

FOREACH (i IN CASE 	WHEN trim(line.ISIN)<>"" THEN [1] 
	ELSE [] END | SET a.ISIN=line.ISIN)
FOREACH (i IN CASE 	WHEN trim(line.ticker)<>"" THEN [1] 
	ELSE [] END | SET a.ticker=line.ticker)
FOREACH (i IN CASE 	WHEN trim(line.issueDate)<>"" AND trim(line.maturityDate)<>"" THEN [1] 
	ELSE [] END | SET a.issueDate=line.issueDate, a.maturityDate=line.maturityDate)
FOREACH (i IN CASE 	WHEN trim(line.issueDate)<>"" AND trim(line.maturityDate)<>"" AND futureDays>todayDays THEN [1] 
	ELSE [] END | SET a.timeToMaturityDays=TOFLOAT(futureDays-todayDays), a.timeToMaturityYears = TOFLOAT(a.timeToMaturityDays/365))
FOREACH (i IN CASE 	WHEN trim(line.fitchRating)<>"" THEN [1] 
	ELSE [] END | SET a.rating=line.fitchRating)


WITH line,custac,a

MATCH (security:Asset)
MATCH (fr:FitchRating)
WHERE security.id=a.id
AND fr.rating=security.rating
SET a.ratingScore= fr.score
