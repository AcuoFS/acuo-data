LOAD CSV WITH HEADERS FROM '%dataImportLink%/csv/initmc.csv' AS line

MATCH (a:Agreement {id:line.AgreementId})
MATCH (c:Client)-[:MANAGES]->(e:LegalEntity)-[s:CLIENT_SIGNS]->(a)<-[:COUNTERPARTY_SIGNS]-(ce)
MATCH (ms:MarginStatement {id:line.StatementId})

MERGE (mc:MarginCall {id:line.CallId, 
                    callDate:line.CallDate,
                    marginType:line.MarginType,
                    direction:line.Direction})

WITH *

MERGE (mc)-[:FIRST]->(step:Step {status:line.Status})
MERGE (mc)-[:LAST]->(step)

WITH *

SET mc.id=line.CallId,
    mc.valuationDate=line.ValuationDate,
    mc.currency=line.Currency,
    mc.excessAmount=toFloat(line.ExcessAmount),
    mc.marginAmount=toFloat(line.TotalCallAmount),
    mc.balanceAmount=toFloat(line.CollateralValue),
    mc.deliverAmount=toFloat(line.DeliverAmount),
    mc.returnAmount=toFloat(line.ReturnAmount),
    mc.pendingCollateral=toFloat(line.PendingCollateral),
    mc.exposure=toFloat(line.Exposure),
    mc.IMRole=line.IMRole,
    mc.parentRank=1,
    mc.status=line.Status

MERGE (mc)-[:PART_OF]->(ms)
MERGE (mc)-[:STEMS_FROM]->(a)

WITH *

MATCH (step2:Step {status:'Expected'})<-[r:LAST]-(mce:MarginCall {callDate:line.CallDate, marginType:line.MarginType, status:'Expected', currency:line.Currency})-[:PART_OF]->(ms)

DELETE r

MERGE (step2)-[:NEXT]->(:Step {status:'MatchedToReconciled'})<-[:LAST]-(mce)

MERGE (mce)<-[:MATCHED_TO_EXPECTED]-(mc)
